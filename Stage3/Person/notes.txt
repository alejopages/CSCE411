If fan = 10:
    10 pointers (keys) per node max
    9 values per node max
    5 pointers minimum
    4 values minimum
	4 file entries minimum

If fan = 200:
    200 pointers (keys) per node max
    199 values per node max
    100 pointers minimum
    99 values minimum
	99 file entries minimum

Sort Person by stateId
Sort Message by timeId

Entries per file follow the value mins/maxes

------------------
numItems = 1999
fan = 10
maxKeys = 10
minKeys = 5
maxValues = 9
minValues = 4

valuesPerFile = maxValues
Take numItems and divide it by valuesPerFile. If the remainder is >= .5, keep that value. If not, decrease valuesPerFile until you get a remainder >= .5 (50% full leaves requirement).

numLeaves = ceil(numItems/valuesPerFile)

Generate all the leaves at once. The leftmost leaf will have an empty far-left pointer. The rightmost leaf will have an empty far-right pointer. Each value in the file will have *all* the values from the table (it's already stored in the objects). The first value in the values list should be the value we're sorting by (stateId for Person). Use ';' for delimiter.

numLvl1Nodes = ceil(numLeaves/numKeys)
Afterward, take numLeaves and divide that by the number of pointers a node may have


